/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sigha.view;
import br.com.sigha.Beans.AuxVerificaProfrHorAulaBeans;
import br.com.sigha.Beans.CursoBeans;
import br.com.sigha.Beans.HorarioCursoBeans;
import br.com.sigha.Beans.ProfessorHorarioBeans;
import br.com.sigha.Beans.MateriaBeans;
import br.com.sigha.Beans.TempMateriaGridBeans;
import br.com.sigha.Beans.ProfessorBeans;
import br.com.sigha.Beans.ProfessorMateriaBeans;
import br.com.sigha.Beans.UnidadeLogadoBeans;
import br.com.sigha.Dao.AuxVerificaProfHorAulaDao;
import br.com.sigha.Dao.CursoDao;
import br.com.sigha.Dao.HorarioCursoDao;
import br.com.sigha.Dao.ProfessorHorarioDao;
import br.com.sigha.Dao.MateriaDao;
import br.com.sigha.Dao.ProfessorDao;
import br.com.sigha.Dao.ProfessorMateriaDao;
import br.com.sigha.Validacao.Cpf;
import br.com.sigha.Util.PintarLinhasTabela;
import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author MarcosVinicius
 */
public class ViewPCadProfessor extends javax.swing.JPanel {

    /**
     * Creates new form ViewPCadProfessor
     */
    private int idprofessor;//guarda o id do professor que esta sendo editado
    List<CursoBeans> lcurso;
    List<MateriaBeans> lmateria;
    List<HorarioCursoBeans> lhorariocurso;
    List<TempMateriaGridBeans> lmateriagrid = new ArrayList<TempMateriaGridBeans>();
    List<ProfessorMateriaBeans> lprofessormateria;
    List<ProfessorHorarioBeans> lhorarioprofessor;
    private List<ProfessorBeans> lprofessor;//lista de professores cadastrados
    DefaultTableModel tabelacurso, tabelahorario;
    Boolean adcionoumateria = false;//verifica se a grade de materia relacionado ao professor foi mudada

    public ViewPCadProfessor() {

        initComponents();
        DesativaTela();
        tabelacurso = (DefaultTableModel) jTcursos.getModel();
        tabelahorario = (DefaultTableModel) jThorario.getModel();        
        jTcursos.getColumnModel().getColumn(1).setMaxWidth(330);
        jTcursos.getColumnModel().getColumn(1).setMinWidth(330);
        jTcursos.getColumnModel().getColumn(2).setMaxWidth(250);
        jTcursos.getColumnModel().getColumn(2).setMinWidth(250);
        OcultaCampo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTcadprofessor = new javax.swing.JTable();
        jTpesquisa = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jCcampopesquisa = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTnome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTemail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jDdatacadastro = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jRsituacao = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        jCtipo = new javax.swing.JComboBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jFcpf = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jDdatanascimento = new com.toedter.calendar.JDateChooser();
        jCestadocivil = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTrua = new javax.swing.JTextField();
        jTbairro = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTcidade = new javax.swing.JTextField();
        jTestado = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTnumero = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jFfixo = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jFcelular = new javax.swing.JFormattedTextField();
        jTregistro = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jCcursos = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTcursos = new javax.swing.JTable();
        jBadciona = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jCmateria = new javax.swing.JComboBox();
        jBretira = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jThorario = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jBnovo = new javax.swing.JButton();
        jBsalvar = new javax.swing.JButton();
        jBalterar = new javax.swing.JButton();
        jBexcluir = new javax.swing.JButton();
        jBpsquisar = new javax.swing.JButton();
        jBcancelar = new javax.swing.JButton();

        jDialog1.setMinimumSize(new java.awt.Dimension(635, 350));
        jDialog1.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        jDialog1.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jDialog1WindowClosed(evt);
            }
        });

        jTcadprofessor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME", "TIPO", "REGISTRO", "TELEFONE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTcadprofessor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTcadprofessorMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTcadprofessorMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(jTcadprofessor);
        if (jTcadprofessor.getColumnModel().getColumnCount() > 0) {
            jTcadprofessor.getColumnModel().getColumn(0).setResizable(false);
            jTcadprofessor.getColumnModel().getColumn(1).setResizable(false);
            jTcadprofessor.getColumnModel().getColumn(2).setResizable(false);
            jTcadprofessor.getColumnModel().getColumn(3).setResizable(false);
        }

        jTpesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTpesquisaKeyReleased(evt);
            }
        });

        jLabel27.setText("PESQUISA:");

        jCcampopesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NOME", "TIPO", "REGISTRO" }));

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addComponent(jTpesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(jCcampopesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)))
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCcampopesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jDialog1.getAccessibleContext().setAccessibleParent(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Nome:");

        jTnome.setDocument(new br.com.sigha.Util.LimitaCaracterUpper(80)
        );

        jLabel2.setText("E-mail");

        jTemail.setDocument(new br.com.sigha.Util.LimitaCaracterUpper(20));

        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Data Cadastro");

        jLabel14.setText("Situação");

        jRsituacao.setSelected(true);
        jRsituacao.setText("Ativo");

        jLabel15.setText("Tipo");

        jCtipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Efetivo", "Temporario" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jTnome)
                    .addComponent(jLabel2)
                    .addComponent(jTemail, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel14)
                    .addComponent(jRsituacao)
                    .addComponent(jDdatacadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCtipo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDdatacadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRsituacao))
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        try {
            jFcpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFcpf.setText("000.000.000-00");
        jFcpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFcpfActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setText("CPF");

        jCestadocivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Solteiro", "Casado", "Amaziado", "Viuvo" }));

        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setText("Data de Nascimento");

        jLabel6.setText("Estado Civil");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("ENDERECO"));

        jLabel7.setText("Rua");

        jTrua.setDocument(new br.com.sigha.Util.LimitaCaracterUpper(80));

        jTbairro.setDocument(new br.com.sigha.Util.LimitaCaracterUpper(30));
        jTbairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTbairroActionPerformed(evt);
            }
        });

        jLabel8.setText("Bairro");

        jLabel9.setText("Cidade");

        jTcidade.setDocument(new br.com.sigha.Util.LimitaCaracterUpper(30));

        jTestado.setDocument(new br.com.sigha.Util.LimitaCaracterUpper(20));

        jLabel10.setText("Estado");

        jTnumero.setDocument(new br.com.sigha.Util.LimitaCaracterUpper(10));

        jLabel26.setText("Numero");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 392, Short.MAX_VALUE))
                    .addComponent(jTrua))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jTnumero))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTbairro, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jTcidade, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jTestado, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTrua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTbairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTcidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTestado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 26, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("TELEFONE"));

        jLabel11.setText("Fixo");

        try {
            jFfixo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFfixo.setText("(00)0000-0000");

        jLabel12.setText("Celular");

        try {
            jFcelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFcelular.setText("(00)0000-0000");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jFfixo, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jFcelular, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFfixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFcelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 27, Short.MAX_VALUE))
        );

        jTregistro.setDocument(new br.com.sigha.Util.LimitaCaracterUpper(20));

        jLabel25.setForeground(new java.awt.Color(204, 0, 0));
        jLabel25.setText("Registro");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFcpf, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jDdatanascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCestadocivil, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jTregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFcpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDdatanascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCestadocivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTregistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("DADOS PESSOAIS", jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jCcursos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCcursosItemStateChanged(evt);
            }
        });

        jLabel13.setText("Cursos Existentes");

        jTcursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REGISTRO", "CURSOS MINISTRADOS", "MATERIA", "HORARIO", "ATIVO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTcursos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTcursos.setEnabled(false);
        jTcursos.getTableHeader().setResizingAllowed(false);
        jTcursos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTcursos);
        if (jTcursos.getColumnModel().getColumnCount() > 0) {
            jTcursos.getColumnModel().getColumn(0).setResizable(false);
            jTcursos.getColumnModel().getColumn(1).setResizable(false);
            jTcursos.getColumnModel().getColumn(2).setResizable(false);
            jTcursos.getColumnModel().getColumn(3).setResizable(false);
        }

        jBadciona.setText(">>");
        jBadciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBadcionaActionPerformed(evt);
            }
        });

        jLabel24.setText("Materias");

        jBretira.setText("<<");
        jBretira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBretiraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel13)
                        .addComponent(jLabel24)
                        .addComponent(jCcursos, 0, 218, Short.MAX_VALUE)
                        .addComponent(jCmateria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jBadciona)
                    .addComponent(jBretira))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCcursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCmateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBadciona)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBretira)
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("MATERIAS MINISTRADAS", jPanel3);

        jThorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "INICIO", "TERMINO", "SEGUNDA-FEIRA", "TERCA-FEIRA", "QUARTA-FEIRA", "QUINTA-FEIRA", "SEXTA-FEIRA", "SABADO", "DOMINGO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jThorario.setEnabled(false);
        jThorario.getTableHeader().setReorderingAllowed(false);
        jThorario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jThorarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jThorario);
        if (jThorario.getColumnModel().getColumnCount() > 0) {
            jThorario.getColumnModel().getColumn(0).setResizable(false);
            jThorario.getColumnModel().getColumn(1).setResizable(false);
            jThorario.getColumnModel().getColumn(2).setResizable(false);
            jThorario.getColumnModel().getColumn(3).setResizable(false);
            jThorario.getColumnModel().getColumn(4).setResizable(false);
            jThorario.getColumnModel().getColumn(5).setResizable(false);
            jThorario.getColumnModel().getColumn(6).setResizable(false);
            jThorario.getColumnModel().getColumn(7).setResizable(false);
            jThorario.getColumnModel().getColumn(8).setResizable(false);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("HORARIO AULA", jPanel6);

        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jBnovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/NOVO32X32.png"))); // NOI18N
        jBnovo.setText("NOVO");
        jBnovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnovoActionPerformed(evt);
            }
        });

        jBsalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/SALVAR32X32.png"))); // NOI18N
        jBsalvar.setText("SALVAR");
        jBsalvar.setEnabled(false);
        jBsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsalvarActionPerformed(evt);
            }
        });

        jBalterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/EDITAR32X32.png"))); // NOI18N
        jBalterar.setText("ALTERAR");
        jBalterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBalterarActionPerformed(evt);
            }
        });

        jBexcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/EXCLUIR32X32.png"))); // NOI18N
        jBexcluir.setText("EXCLUIR");
        jBexcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBexcluirActionPerformed(evt);
            }
        });

        jBpsquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/PESQUISA32X32.png"))); // NOI18N
        jBpsquisar.setText("PESQUISAR");
        jBpsquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBpsquisarActionPerformed(evt);
            }
        });

        jBcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/CANCELAR.png"))); // NOI18N
        jBcancelar.setText("CANCELAR");
        jBcancelar.setEnabled(false);
        jBcancelar.setMaximumSize(new java.awt.Dimension(121, 32));
        jBcancelar.setMinimumSize(new java.awt.Dimension(121, 32));
        jBcancelar.setPreferredSize(new java.awt.Dimension(121, 32));
        jBcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBnovo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBsalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBalterar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBexcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBpsquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBnovo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBsalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBalterar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBexcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBpsquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jFcpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFcpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFcpfActionPerformed

    private void jBexcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBexcluirActionPerformed
        // TODO add your handling code here:
        String idprofessormateria = "0";
        if (idprofessor > 0) {
            for (int i = 0; i < lmateriagrid.size(); i++) {
                idprofessormateria = idprofessormateria + "," + lmateriagrid.get(i).getId();
            }
            ExcluirProfessor(idprofessor, idprofessormateria);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione Um Registro Para Excluir", "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBexcluirActionPerformed

    private void jTbairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTbairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTbairroActionPerformed

    private void jBsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsalvarActionPerformed
        // TODO add your handling code here:
        if (VerificaCampos()) {
            Cpf vercpf = new Cpf();
            if (vercpf.isCPF(jFcpf.getText().replaceAll("\\.", "").replaceAll("-", ""))) {
                if (idprofessor == 0) {
                    CadastraProfessor();
                    LimpaTela();
                    DesativaTela();
                    NovoAlterarExcluirPesquisa();
                } else if (idprofessor > 0) {
                    AlteraProfessor();
                    LimpaTela();
                    DesativaTela();
                    NovoAlterarExcluirPesquisa();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Cpf Incorreto", "Cadastro de Professor", WIDTH);
            }
        } else {
            JOptionPane.showMessageDialog(null, "A Campos Obrigatorio", "Cadastro de Professor", WIDTH);
        }

    }//GEN-LAST:event_jBsalvarActionPerformed

    private void jBpsquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBpsquisarActionPerformed
        // TODO add your handling code here:
        jDialog1.setLocationRelativeTo(null);
        jDialog1.setVisible(true);
        DefaultTableModel tabelaprofessor = (DefaultTableModel) jTcadprofessor.getModel();
        tabelaprofessor.setNumRows(0);
    }//GEN-LAST:event_jBpsquisarActionPerformed

    private void jBnovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnovoActionPerformed
        // TODO add your handling code here:
        AtivaTela();
        LimpaTela();
        SalvarCancelar();
    }//GEN-LAST:event_jBnovoActionPerformed

    private void jBcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarActionPerformed
        // TODO add your handling code here:
        DesativaTela();
        LimpaTela();
        NovoAlterarExcluirPesquisa();
    }//GEN-LAST:event_jBcancelarActionPerformed

    private void jTpesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTpesquisaKeyReleased
        // TODO add your handling code here:
        PesquisaProfessor();
    }//GEN-LAST:event_jTpesquisaKeyReleased

    private void jTcadprofessorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTcadprofessorMouseClicked
        // TODO add your handling code here:
        try {
            LimpaTela();
            ClickProfessor();
            jDialog1.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao Preencher Dados Na Tela\n" + e, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jTcadprofessorMouseClicked

    private void jDialog1WindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialog1WindowClosed
        // TODO add your handling code here:

    }//GEN-LAST:event_jDialog1WindowClosed

    private void jBalterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBalterarActionPerformed
        // TODO add your handling code here:
        if (idprofessor > 0) {
            AtivaTela();
            SalvarCancelar();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione Um Registro Para Alterar", "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBalterarActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
//        if (jTabbedPane1.getSelectedIndex() != 2 && adcionoumateria || jTabbedPane1.getSelectedIndex() == 2 && adcionoumateria) {
//            tabelahorario.setNumRows(0);
//        }
//        if (jTabbedPane1.getSelectedIndex() == 1 && jCcursos.getItemCount() == 0) {
//            BuscaCursos();
//        }
//        if (jTabbedPane1.getSelectedIndex() == 2 && jThorario.getRowCount() == 0) {
//            BuscaHorario();
//        }
//        if (jTabbedPane1.getSelectedIndex() != 1) {
//            jCcursos.removeAllItems();
//            jCmateria.removeAllItems();
//        }

        if (jTabbedPane1.getSelectedIndex() == 1 && jCcursos.getItemCount() == 0) {
            BuscaCursos();
        }
        if (jTabbedPane1.getSelectedIndex() != 1) {
            jCcursos.removeAllItems();
            jCmateria.removeAllItems();
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jCcursosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCcursosItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == 1) {
            BuscaMaterias();
        }
    }//GEN-LAST:event_jCcursosItemStateChanged

    private void jBadcionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBadcionaActionPerformed
        // TODO add your handling code here:
        if (jCcursos.getItemCount() > 0 && jCmateria.getItemCount() > 0) {
            AdicionaMateriaGrid();
            BuscaHorario();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Curso e uma Materia", "Cadastro de Professor", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBadcionaActionPerformed

    private void jBretiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBretiraActionPerformed
        // TODO add your handling code here:
        if (jTcursos.getSelectedRow() >= 0) {
            if (!String.valueOf(jTcursos.getValueAt(jTcursos.getSelectedRow(), 3)).equals("SIM")) {
                RemoveMateriaGrid();
                BuscaHorario();
            }else{
               JOptionPane.showMessageDialog(null, "Professor Com Materia Já Utilizada em Horario", "Cadastro de Professor", JOptionPane.WARNING_MESSAGE); 
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione Uma Materia", "Cadastro de Professor", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBretiraActionPerformed

    private void jTcadprofessorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTcadprofessorMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTcadprofessorMouseEntered

    private void jThorarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jThorarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jThorarioMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBadciona;
    private javax.swing.JButton jBalterar;
    private javax.swing.JButton jBcancelar;
    private javax.swing.JButton jBexcluir;
    private javax.swing.JButton jBnovo;
    private javax.swing.JButton jBpsquisar;
    private javax.swing.JButton jBretira;
    private javax.swing.JButton jBsalvar;
    private javax.swing.JComboBox jCcampopesquisa;
    private javax.swing.JComboBox jCcursos;
    private javax.swing.JComboBox jCestadocivil;
    private javax.swing.JComboBox jCmateria;
    private javax.swing.JComboBox jCtipo;
    private com.toedter.calendar.JDateChooser jDdatacadastro;
    private com.toedter.calendar.JDateChooser jDdatanascimento;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFormattedTextField jFcelular;
    private javax.swing.JFormattedTextField jFcpf;
    private javax.swing.JFormattedTextField jFfixo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRsituacao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTbairro;
    private javax.swing.JTable jTcadprofessor;
    private javax.swing.JTextField jTcidade;
    private javax.swing.JTable jTcursos;
    private javax.swing.JTextField jTemail;
    private javax.swing.JTextField jTestado;
    private javax.swing.JTable jThorario;
    private javax.swing.JTextField jTnome;
    private javax.swing.JTextField jTnumero;
    private javax.swing.JTextField jTpesquisa;
    private javax.swing.JTextField jTregistro;
    private javax.swing.JTextField jTrua;
    // End of variables declaration//GEN-END:variables

    private void LimpaTela() {
        jTnome.setText(null);
        jDdatacadastro.setDate(new Date());
        jCtipo.setSelectedIndex(0);
        jTemail.setText(null);
        jRsituacao.setSelected(true);
        jFcpf.setText("000.000.000-00");
        jDdatanascimento.setDate(null);
        jCestadocivil.setSelectedIndex(0);
        jTrua.setText(null);
        jTnumero.setText(null);
        jTbairro.setText(null);
        jTcidade.setText(null);
        jTestado.setText(null);
        jTregistro.setText(null);
        jFcelular.setText("(00)0000-0000");
        jFfixo.setText("(00)0000-0000");
        idprofessor = 0;
        tabelacurso.setNumRows(0);
        tabelahorario.setNumRows(0);
        lmateriagrid.clear();
    }

    private void AtivaTela() {
        jTnome.setEnabled(true);
        jDdatacadastro.setEnabled(true);
        jCtipo.setEnabled(true);
        jTemail.setEnabled(true);
        jRsituacao.setEnabled(true);
        jFcpf.setEnabled(true);
        jDdatanascimento.setEnabled(true);
        jCestadocivil.setEnabled(true);
        jTregistro.setEnabled(true);
        jFfixo.setEnabled(true);
        jFcelular.setEnabled(true);
        jTrua.setEnabled(true);
        jTnumero.setEnabled(true);
        jTbairro.setEnabled(true);
        jTcidade.setEnabled(true);
        jTestado.setEnabled(true);
        jCcursos.setEnabled(true);
        jCmateria.setEnabled(true);
        jBadciona.setEnabled(true);
        jBretira.setEnabled(true);
    }

    private void DesativaTela() {
        jTnome.setEnabled(false);
        jDdatacadastro.setEnabled(false);
        jCtipo.setEnabled(false);
        jTemail.setEnabled(false);
        jRsituacao.setEnabled(false);
        jFcpf.setEnabled(false);
        jDdatanascimento.setEnabled(false);
        jCestadocivil.setEnabled(false);
        jTregistro.setEnabled(false);
        jFfixo.setEnabled(false);
        jFcelular.setEnabled(false);
        jTrua.setEnabled(false);
        jTnumero.setEnabled(false);
        jTbairro.setEnabled(false);
        jTcidade.setEnabled(false);
        jTestado.setEnabled(false);
        jCcursos.setEnabled(false);
        jCmateria.setEnabled(false);
        jBadciona.setEnabled(false);
        jBretira.setEnabled(false);
    }

    public void NovoAlterarExcluirPesquisa() {
        jBnovo.setEnabled(true);
        jBsalvar.setEnabled(false);
        jBcancelar.setEnabled(false);
        jBalterar.setEnabled(true);
        jBexcluir.setEnabled(true);
        jBpsquisar.setEnabled(true);
        jThorario.setEnabled(false);
        jTcursos.setEnabled(false);
    }

    public void SalvarCancelar() {
        jBnovo.setEnabled(false);
        jBsalvar.setEnabled(true);
        jBcancelar.setEnabled(true);
        jBalterar.setEnabled(false);
        jBexcluir.setEnabled(false);
        jBpsquisar.setEnabled(false);
        jThorario.setEnabled(true);
        jTcursos.setEnabled(true);
    }

    private void CadastraProfessor() {
        ProfessorBeans pb = new ProfessorBeans();
        pb.setIdunidade(new UnidadeLogadoBeans().getId());
        pb.setNome(jTnome.getText());
        pb.setAtivo(String.valueOf(jRsituacao.isSelected()));
        pb.setDatacadastro(jDdatacadastro.getDate());
        pb.setTipo(String.valueOf(jCtipo.getSelectedItem()));
        pb.setEmail(jTemail.getText());
        pb.setCpf(jFcpf.getText());
        pb.setDatanascimento(jDdatanascimento.getDate());
        pb.setEstadocivil(String.valueOf(jCestadocivil.getSelectedItem()));
        pb.setRegistro(jTregistro.getText());
        pb.setTelfixo(jFfixo.getText());
        pb.setTelcel(jFcelular.getText());
        pb.setRua(jTrua.getText());
        pb.setNumero(jTnumero.getText());
        pb.setBairro(jTbairro.getText());
        pb.setCidade(jTcidade.getText());
        pb.setEstado(jTestado.getText());
        try {
            ProfessorDao pfd = new ProfessorDao();
            idprofessor = pfd.cadastrar(pb);
            if (idprofessor > 0) {
                CadastraMateriaProfessor(idprofessor);
            }
            JOptionPane.showMessageDialog(null, "Professor Cadastrado com Sucesso", "Cadastro Professor", WIDTH);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro Cadastrar\n" + ex, "Cadastro Professor", JOptionPane.ERROR_MESSAGE);
        }

    }

    private boolean VerificaCampos() {
        return !"".equals(jTnome.getText()) && null != jDdatacadastro.getDate() && jDdatanascimento.getDate() != null && !"".equals(jTregistro.getText());
    }

    private void AlteraProfessor() {
        ProfessorBeans pb = new ProfessorBeans();
        pb.setIdunidade(new UnidadeLogadoBeans().getId());
        pb.setId(idprofessor);
        pb.setNome(jTnome.getText());
        pb.setAtivo(String.valueOf(jRsituacao.isSelected()));
        pb.setDatacadastro(jDdatacadastro.getDate());
        pb.setTipo(String.valueOf(jCtipo.getSelectedItem()));
        pb.setEmail(jTemail.getText());
        pb.setCpf(jFcpf.getText());
        pb.setDatanascimento(jDdatanascimento.getDate());
        pb.setEstadocivil(String.valueOf(jCestadocivil.getSelectedItem()));
        pb.setRegistro(jTregistro.getText());
        pb.setTelfixo(jFfixo.getText());
        pb.setTelcel(jFcelular.getText());
        pb.setRua(jTrua.getText());
        pb.setNumero(jTnumero.getText());
        pb.setBairro(jTbairro.getText());
        pb.setCidade(jTcidade.getText());
        pb.setEstado(jTestado.getText());
        try {
            ProfessorDao pfd = new ProfessorDao();
            pfd.Alterar(pb);
            if (DeletaMateriaHorarioProfessor()) {
                CadastraMateriaProfessor(idprofessor);
                JOptionPane.showMessageDialog(null, "Cadastrado Alterado com Sucesso", "Cadastro Professor", WIDTH);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao Alterar Materia Professor\n", "Cadastro Professor", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro Alterar\n" + ex, "Cadastro Professor", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void PesquisaProfessor() {

        try {
            ProfessorDao pd = new ProfessorDao();
            lprofessor = pd.ListaProfessor(new UnidadeLogadoBeans().getId(), String.valueOf(jCcampopesquisa.getSelectedItem()), jTpesquisa.getText());
            DefaultTableModel tabelaprofessor = (DefaultTableModel) jTcadprofessor.getModel();
            tabelaprofessor.setNumRows(0);
            for (int i = 0; i < lprofessor.size(); i++) {
                tabelaprofessor.addRow(new Object[]{lprofessor.get(i).getNome(), lprofessor.get(i).getTipo(),
                    lprofessor.get(i).getRegistro(), lprofessor.get(i).getTelcel()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro Lista Professor\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void ClickProfessor() {
        for (int i = 0; i < lprofessor.size(); i++) {
            if (jTcadprofessor.getSelectedRow() == i) {
                jTnome.setText(lprofessor.get(i).getNome());
                jDdatacadastro.setDate(lprofessor.get(i).getDatacadastro());
                jCtipo.setSelectedItem(lprofessor.get(i).getTipo());
                jTemail.setText(lprofessor.get(i).getEmail());
                jRsituacao.setSelected(Boolean.valueOf(lprofessor.get(i).getAtivo()));
                jFcpf.setText(lprofessor.get(i).getCpf());
                jDdatanascimento.setDate(lprofessor.get(i).getDatanascimento());
                jCestadocivil.setSelectedItem(lprofessor.get(i).getEstadocivil());
                jTrua.setText(lprofessor.get(i).getRua());
                jTnumero.setText(lprofessor.get(i).getNumero());
                jTbairro.setText(lprofessor.get(i).getBairro());
                jTcidade.setText(lprofessor.get(i).getCidade());
                jTestado.setText(lprofessor.get(i).getEstado());
                jTregistro.setText(lprofessor.get(i).getRegistro());
                jFcelular.setText(lprofessor.get(i).getTelcel());
                jFfixo.setText(lprofessor.get(i).getTelfixo());
                idprofessor = lprofessor.get(i).getId();
                BuscaMateriaProfessor(idprofessor);//busca materias ministrada pelo professor
                BuscaHorarioClick();//busca horario do curso que o professor ministra aula
            }
        }
    }

    private void ExcluirProfessor(int idprofessor, String idprofessormateria) {

        try {
            ProfessorDao pd = new ProfessorDao();
            pd.ExcluirProfessor(idprofessor, idprofessormateria);
            LimpaTela();
            JOptionPane.showMessageDialog(null, "Registro Excluido com Sucesso!!", "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Deletar Registro\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void BuscaCursos() {

        try {
            CursoDao cd = new CursoDao();
            lcurso = cd.BuscaCursoAtivo(new UnidadeLogadoBeans().getId());
            for (int i = 0; i < lcurso.size(); i++) {
                jCcursos.addItem(lcurso.get(i).getNome());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Buscar Cursos\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void BuscaMaterias() {
        if (jCcursos.getItemCount() > 0) {
            try {
                jCmateria.removeAllItems();
                MateriaDao md = new MateriaDao();
                lmateria = md.BuscaMateriaCurso(lcurso.get(jCcursos.getSelectedIndex()).getId());
                for (int i = 0; i < lmateria.size(); i++) {
                    jCmateria.addItem(lmateria.get(i).getNome());
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao Buscar Materias\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void AdicionaMateriaGrid() {
        Boolean ver = true;
        for (int i = 0; i < jTcursos.getRowCount(); i++) {
            String curso = (String) jTcursos.getValueAt(i, 1);
            String materia = (String) jTcursos.getValueAt(i, 2);
            String cursojc = (String) jCcursos.getSelectedItem();
            String materiajc = (String) jCmateria.getSelectedItem();
            if (curso.equals(cursojc) && materia.equals(materiajc)) {
                ver = false;
            }
        }
        if (ver) {
            tabelacurso.addRow(new Object[]{lcurso.get(jCcursos.getSelectedIndex()).getId(), lcurso.get(jCcursos.getSelectedIndex()).getNome(), lmateria.get(jCmateria.getSelectedIndex()).getNome(),"",true});
            TempMateriaGridBeans mgb = new TempMateriaGridBeans();
            mgb.setIdcurso(lcurso.get(jCcursos.getSelectedIndex()).getId());
            mgb.setIdmateria(lmateria.get(jCmateria.getSelectedIndex()).getId());            
            lmateriagrid.add(mgb);
            adcionoumateria = true;
        } else {
            JOptionPane.showMessageDialog(null, "Curso ja Adicionado", "Cadastro de Professor", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void RemoveMateriaGrid() {
        int i = jTcursos.getSelectedRow();
        tabelacurso.removeRow(jTcursos.getSelectedRow());
        lmateriagrid.remove(i);
        adcionoumateria = true;
    }

    private void BuscaHorario() {
        String idcurso = "0";
        tabelahorario.setNumRows(0);
        for (int i = 0; i < jTcursos.getRowCount(); i++) {
            idcurso = idcurso + "," + jTcursos.getValueAt(i, 0);
        }
        if (!idcurso.equals("0")) {
            try {
                HorarioCursoDao hd = new HorarioCursoDao();
                lhorariocurso = hd.BuscaHorario(idcurso);
                for (int i = 0; i < lhorariocurso.size(); i++) {
                    tabelahorario.addRow(new Object[]{lhorariocurso.get(i).getInicio(), lhorariocurso.get(i).getTermino(),
                        Boolean.valueOf(lhorariocurso.get(i).getSegunda()), Boolean.valueOf(lhorariocurso.get(i).getTerca()), Boolean.valueOf(lhorariocurso.get(i).getQuarta()),
                        Boolean.valueOf(lhorariocurso.get(i).getQuinta()), Boolean.valueOf(lhorariocurso.get(i).getSexta()), Boolean.valueOf(lhorariocurso.get(i).getSabado()),
                        Boolean.valueOf(lhorariocurso.get(i).getDomingo())});
                    adcionoumateria = false;
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao Buscar Horario\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    //metodo cadastra horario das materias e as materias para o professor
    private void CadastraMateriaProfessor(int idprofessor) {
        try {
            ProfessorMateriaBeans pmb = new ProfessorMateriaBeans();
            ProfessorMateriaDao pmd = new ProfessorMateriaDao();
            for (int i = 0; i < lmateriagrid.size(); i++) {
                pmb.setIdmateria(lmateriagrid.get(i).getIdmateria());
                pmb.setIdprofessor(idprofessor);
                pmb.setAtivo(String.valueOf(jTcursos.getValueAt(i, 4)));
                int idmateriaprofessor = 0;
                if (!String.valueOf(jTcursos.getValueAt(i, 3)).equals("SIM")) {
                    idmateriaprofessor = pmd.AdicionaMateria(pmb);
                } else {
                    idmateriaprofessor = lmateriagrid.get(i).getId(); 
                    pmd.AlteraStatusMateria(lmateriagrid.get(i).getIdmateria(), idprofessor, String.valueOf(jTcursos.getValueAt(i, 4)));
                }                
                CadastraHorarioProfessor(idmateriaprofessor, lmateriagrid.get(i).getIdcurso(), lmateriagrid.get(i).getIdmateria());
            }

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, "Erro ao Salvar Materias do Professor" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }
    }

    //busca materia ministrada por professor
    private void BuscaMateriaProfessor(int idprofessor) {
        try {
            ProfessorMateriaDao pmd = new ProfessorMateriaDao();
            lprofessormateria = pmd.BuscaMateria(idprofessor);

            for (int i = 0; i < lprofessormateria.size(); i++) {
                tabelacurso.addRow(new Object[]{lprofessormateria.get(i).getIdcurso(), lprofessormateria.get(i).getNomecurso(), lprofessormateria.get(i).getNomemateria(),"",Boolean.valueOf(lprofessormateria.get(i).getAtivo())});
                TempMateriaGridBeans tmgb = new TempMateriaGridBeans();
                tmgb.setIdcurso(lprofessormateria.get(i).getIdcurso());
                tmgb.setIdmateria(lprofessormateria.get(i).getIdmateria());
                tmgb.setId(lprofessormateria.get(i).getId());
                lmateriagrid.add(tmgb);
            }
            VerificaMateriaHorarioaula();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Buscar Materia Professor\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }

    }

    //deleta os horarios e as materias cadastrada para o professor
    private Boolean DeletaMateriaHorarioProfessor() {
        Boolean res = false;
        try {//metodo deleta horarios das materias
            for (int i = 0; i < lprofessormateria.size(); i++) {
                ProfessorHorarioDao hpd = new ProfessorHorarioDao();
                hpd.DeletaHorario(lprofessormateria.get(i).getId());
            }
            String idcurso = "0";//metodo busca na grid os cursos que tem movimentacao de aulas geradas
            for (int i = 0; i < jTcursos.getRowCount(); i++) {
                if (String.valueOf(jTcursos.getValueAt(i, 3)).equals("SIM")) {
                    idcurso = idcurso + "," + lmateriagrid.get(i).getId();
                }
            }
            ProfessorMateriaDao pmd = new ProfessorMateriaDao();
            pmd.DeletaMateria(idcurso, idprofessor);//metodo deleta os cursos menos os que teve movimentação
            
            res = true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Deletar Materia Professor\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }
        return res;
    }

    private void CadastraHorarioProfessor(int idmateriaprofessor, int idcurso, int idmateria) {
        try {
            ProfessorHorarioBeans hpb = new ProfessorHorarioBeans();
            HorarioCursoDao hcd = new HorarioCursoDao();//objeto do horario do curso
            MateriaDao md = new MateriaDao();//objeto da materia do curso
            List<HorarioCursoBeans> lthorario = new ArrayList<>();//array list temporario do horario do curso
            MateriaBeans mb = new MateriaBeans();//objeto do beans onde ficara guardado os dias provaveis de aula da materia
            lthorario = hcd.BuscaHorario(idcurso);//metodo retorna o horario do curso e guarda na lista
            mb = md.BuscaMateriaid(idmateria);//metodo retorna dias provaveis de aula da materia do curso

            for (int i = 0; i < jThorario.getRowCount(); i++) {
                for (int j = 0; j < lthorario.size(); j++) {

                    if ((String.valueOf(jThorario.getValueAt(i, 0)).equals(lthorario.get(j).getInicio())) && (String.valueOf(jThorario.getValueAt(i, 1)).equals(lthorario.get(j).getTermino()))) {

                        hpb.setIdprofessormateria(idmateriaprofessor);
                        hpb.setInicio(((String) tabelahorario.getValueAt(i, 0)));
                        hpb.setTermino(((String) tabelahorario.getValueAt(i, 1)));
                        if (Boolean.valueOf(mb.getSegunda()) && (Boolean.valueOf(lthorario.get(j).getSegunda()))) {
                            hpb.setSegunda(String.valueOf(tabelahorario.getValueAt(i, 2)));
                        } else {
                            hpb.setSegunda("false");
                        }
                        if (Boolean.valueOf(mb.getTerca()) && (Boolean.valueOf(lthorario.get(j).getTerca()))) {
                            hpb.setTerca((String.valueOf(tabelahorario.getValueAt(i, 3))));
                        } else {
                            hpb.setTerca("false");
                        }
                        if (Boolean.valueOf(mb.getQuarta()) && (Boolean.valueOf(lthorario.get(j).getQuarta()))) {
                            hpb.setQuarta((String.valueOf(tabelahorario.getValueAt(i, 4))));
                        } else {
                            hpb.setQuarta("false");
                        }
                        if (Boolean.valueOf(mb.getQuinta()) && (Boolean.valueOf(lthorario.get(j).getQuinta()))) {
                            hpb.setQuinta((String.valueOf(tabelahorario.getValueAt(i, 5))));
                        } else {
                            hpb.setQuinta("false");
                        }
                        if (Boolean.valueOf(mb.getSexta()) && (Boolean.valueOf(lthorario.get(j).getSexta()))) {
                            hpb.setSexta((String.valueOf(tabelahorario.getValueAt(i, 6))));
                        } else {
                            hpb.setSexta("false");
                        }
                        if (Boolean.valueOf(mb.getSabado()) && (Boolean.valueOf(lthorario.get(j).getSabado()))) {
                            hpb.setSabado((String.valueOf(tabelahorario.getValueAt(i, 7))));
                        } else {
                            hpb.setSabado("false");
                        }
                        if (Boolean.valueOf(mb.getDomingo()) && (Boolean.valueOf(lthorario.get(j).getDomingo()))) {
                            hpb.setDomingo((String.valueOf(tabelahorario.getValueAt(i, 8))));
                        } else {
                            hpb.setDomingo("false");
                        }
                        ProfessorHorarioDao hpd = new ProfessorHorarioDao();
                        hpd.CadastraHorarioProfessor(hpb);
                    }
                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Cadastrar Horario Professor\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }
    }

    //busca os horario das materias do professor
    private void BuscaHorarioClick() {
        try {
            ProfessorHorarioDao hpd = new ProfessorHorarioDao();
            lhorarioprofessor = hpd.BuscaHorarioProfessor(idprofessor);
            for (int i = 0; i < lhorarioprofessor.size(); i++) {
                tabelahorario.addRow(new Object[]{lhorarioprofessor.get(i).getInicio(), lhorarioprofessor.get(i).getTermino(),
                    Boolean.valueOf(lhorarioprofessor.get(i).getSegunda()), Boolean.valueOf(lhorarioprofessor.get(i).getTerca()), Boolean.valueOf(lhorarioprofessor.get(i).getQuarta()),
                    Boolean.valueOf(lhorarioprofessor.get(i).getQuinta()), Boolean.valueOf(lhorarioprofessor.get(i).getSexta()), Boolean.valueOf(lhorarioprofessor.get(i).getSabado()),
                    Boolean.valueOf(lhorarioprofessor.get(i).getDomingo())});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Buscar Horario\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }
    }

    //verifica dos cursos listados na grid de cursos se algum foi gerado horario de aula e desabilita para nao excluir
    private void VerificaMateriaHorarioaula() {
        List<AuxVerificaProfrHorAulaBeans> lauxver = new ArrayList<>();
        try {
            lauxver = new AuxVerificaProfHorAulaDao().VerificaProfessorHorario(idprofessor);
            for (int i = 0; i < lauxver.size(); i++) {
                for (int j = 0; j < lmateriagrid.size(); j++) {

                    if (lauxver.get(i).getIdmateria() == lmateriagrid.get(j).getIdmateria()) {
                        //JOptionPane.showMessageDialog(null, lauxver.get(i).getIdmateria() + "\n" + lmateriagrid.get(j).getIdmateria());
                        jTcursos.setValueAt("SIM", j, 3);
                        TableCellRenderer renderer = new PintarLinhasTabela();
                        jTcursos.setDefaultRenderer(jTcursos.getColumnClass(0), renderer);

                    }
                }
            }
            for (int j = 0; j < lmateriagrid.size(); j++) {
                if (!String.valueOf(jTcursos.getValueAt(j, 3)).equals("SIM")) {
                    jTcursos.setValueAt("NAO", j, 3);
                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Verificar Materia com Horario Aula\n" + ex, "Cadastro de Professor", JOptionPane.ERROR_MESSAGE);
        }
    }

    //oculta campos na view
    private void OcultaCampo() {
        TableColumn coluna=jTcursos.getColumnModel().getColumn(0);
        coluna.setMinWidth(0);
        coluna.setMaxWidth(0);
        TableColumn coluna3=jTcursos.getColumnModel().getColumn(3);
        coluna3.setMinWidth(0);
        coluna3.setMaxWidth(0);
    }
}
