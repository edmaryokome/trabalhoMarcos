/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sigha.view;

import br.com.sigha.Beans.CursoBeans;
import br.com.sigha.Beans.HorarioCursoBeans;
import br.com.sigha.Beans.ProfessorBeans;
import br.com.sigha.Beans.UnidadeLogadoBeans;
import br.com.sigha.Dao.CursoDao;
import br.com.sigha.Dao.HorarioCursoDao;
import br.com.sigha.Dao.ProfessorDao;
import br.com.sigha.Util.DataSistema;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MarcosVinicius
 */
public class ViewPCadCursos extends javax.swing.JPanel {

    /**
     * Creates new form ViewPCadCursos
     */
    private List<CursoBeans> listacursos;
    private List<ProfessorBeans> listacoordenador;
    private List<HorarioCursoBeans> listahorario;
    private Integer idprofessor;
    DefaultTableModel tabelahorario;

    public ViewPCadCursos() {
        initComponents();
        ListaCurso();
        OcultaCampos();
        InicializaTabelaCoordenador();
        tabelahorario = (DefaultTableModel) jThorariocurso.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDcoordenador = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTbcoordenador = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jBnovo = new javax.swing.JButton();
        jBsalvar = new javax.swing.JButton();
        jBexcluir = new javax.swing.JButton();
        jBcancelar = new javax.swing.JButton();
        jBeditar = new javax.swing.JButton();
        jTcoordenador = new javax.swing.JTextField();
        jRativo = new javax.swing.JRadioButton();
        jTnomecurso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jBcoordenador = new javax.swing.JButton();
        jTidcurso = new javax.swing.JTextField();
        jCturno = new javax.swing.JComboBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTbcursos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jThorariocurso = new javax.swing.JTable();
        jBretiralinha = new javax.swing.JButton();
        jFhinicial = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jFhfinal = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jBok = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jDcoordenador.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDcoordenador.setTitle("COORDENADOR");
        jDcoordenador.setMinimumSize(new java.awt.Dimension(400, 202));
        jDcoordenador.setModal(true);
        jDcoordenador.setResizable(false);

        jTbcoordenador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "NOME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTbcoordenador.getTableHeader().setResizingAllowed(false);
        jTbcoordenador.getTableHeader().setReorderingAllowed(false);
        jTbcoordenador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTbcoordenadorMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTbcoordenador);

        jLabel3.setText("COORDENADORES");

        javax.swing.GroupLayout jDcoordenadorLayout = new javax.swing.GroupLayout(jDcoordenador.getContentPane());
        jDcoordenador.getContentPane().setLayout(jDcoordenadorLayout);
        jDcoordenadorLayout.setHorizontalGroup(
            jDcoordenadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDcoordenadorLayout.createSequentialGroup()
                .addGroup(jDcoordenadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDcoordenadorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDcoordenadorLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel3)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jDcoordenadorLayout.setVerticalGroup(
            jDcoordenadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDcoordenadorLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jBnovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/NOVO32X32.png"))); // NOI18N
        jBnovo.setText("NOVO");
        jBnovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnovoActionPerformed(evt);
            }
        });

        jBsalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/SALVAR32X32.png"))); // NOI18N
        jBsalvar.setText("SALVAR");
        jBsalvar.setEnabled(false);
        jBsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsalvarActionPerformed(evt);
            }
        });

        jBexcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/EXCLUIR32X32.png"))); // NOI18N
        jBexcluir.setText("EXCLUIR");
        jBexcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBexcluirActionPerformed(evt);
            }
        });

        jBcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/CANCELAR.png"))); // NOI18N
        jBcancelar.setText("CANCELAR");
        jBcancelar.setEnabled(false);
        jBcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarActionPerformed(evt);
            }
        });

        jBeditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/EDITAR32X32.png"))); // NOI18N
        jBeditar.setText("EDITAR");
        jBeditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBeditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBnovo)
                .addGap(18, 18, 18)
                .addComponent(jBsalvar)
                .addGap(18, 18, 18)
                .addComponent(jBcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBeditar)
                .addGap(26, 26, 26)
                .addComponent(jBexcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBcancelar, jBeditar, jBexcluir, jBnovo, jBsalvar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBnovo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBsalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBexcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBeditar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTcoordenador.setEditable(false);

        jRativo.setSelected(true);
        jRativo.setText("Ativo");
        jRativo.setEnabled(false);

        jTnomecurso.setDocument(new br.com.sigha.Util.LimitaCaracterUpper(50));
        jTnomecurso.setEnabled(false);
        jTnomecurso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTnomecursoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTnomecursoKeyReleased(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("Coordenador");

        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Nome Curso");

        jBcoordenador.setText("...");
        jBcoordenador.setEnabled(false);
        jBcoordenador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcoordenadorActionPerformed(evt);
            }
        });

        jTidcurso.setEnabled(false);

        jCturno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Matutino", "vespertino", "Noturno", "Diurno", "Mat/Not", "Vesp/Not" }));
        jCturno.setEnabled(false);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jTbcursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CURSO", "COORDENADOR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTbcursos.getTableHeader().setResizingAllowed(false);
        jTbcursos.getTableHeader().setReorderingAllowed(false);
        jTbcursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTbcursosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTbcursos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("CURSOS", jPanel2);

        jThorariocurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "INICIO", "TERMINO", "SEGUNDA", "TERÇA", "QUARTA", "QUINTA", "SEXTA", "SABADO", "DOMINGO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jThorariocurso.setEnabled(false);
        jThorariocurso.getTableHeader().setResizingAllowed(false);
        jThorariocurso.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jThorariocurso);

        jBretiralinha.setText("-");
        jBretiralinha.setEnabled(false);
        jBretiralinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBretiralinhaActionPerformed(evt);
            }
        });

        try {
            jFhinicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFhinicial.setText("00:00");
        jFhinicial.setEnabled(false);

        jLabel4.setText("hs");

        try {
            jFhfinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFhfinal.setText("00:00");
        jFhfinal.setEnabled(false);

        jLabel6.setText("hs");

        jBok.setText("OK");
        jBok.setEnabled(false);
        jBok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBokActionPerformed(evt);
            }
        });

        jLabel5.setText("Inicio");

        jLabel7.setText("Termino");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jFhinicial, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addComponent(jLabel7)
                    .addComponent(jBok)
                    .addComponent(jBretiralinha)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jFhfinal, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFhinicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFhfinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addComponent(jBok)
                        .addGap(18, 18, 18)
                        .addComponent(jBretiralinha))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("HORARIO", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTnomecurso, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jTidcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTcoordenador, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCturno, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBcoordenador)
                            .addComponent(jRativo))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTidcurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTnomecurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jCturno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRativo))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTcoordenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBcoordenador))))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBnovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnovoActionPerformed
        // TODO add your handling code here:
        LimpaTela();
        AtivaTela();
        AtivaSalvarCancelar();
    }//GEN-LAST:event_jBnovoActionPerformed

    private void jBsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsalvarActionPerformed
        // TODO add your handling code here:
        if (!"".equals(jTnomecurso.getText()) && !"".equals(jTcoordenador.getText())) {
            if ("".equals(jTidcurso.getText())) {
                CadastraCurso();
                ListaCurso();
                LimpaTela();
                AtivaNovoExcluirEditar();
                DesativaTela();
            } else {
                AlteraCurso();
                ListaCurso();
                LimpaTela();
                AtivaNovoExcluirEditar();
                DesativaTela();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Campos Nome e Coordenador Obrigatorio", "Cadastro Curso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBsalvarActionPerformed

    private void jBexcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBexcluirActionPerformed
        // TODO add your handling code here:
        if (idprofessor >= 1) {
            Excluicurso();
            LimpaTela();
            ListaCurso();

        } else {
            JOptionPane.showMessageDialog(null, "Selecione Um Curso para Excluir", "Cadastro Curso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBexcluirActionPerformed

    private void jBcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarActionPerformed
        // TODO add your handling code here:
        LimpaTela();
        AtivaNovoExcluirEditar();
        DesativaTela();
    }//GEN-LAST:event_jBcancelarActionPerformed

    private void jBeditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBeditarActionPerformed
        // TODO add your handling code here:
        AtivaTela();
        AtivaSalvarCancelar();
    }//GEN-LAST:event_jBeditarActionPerformed

    private void jTnomecursoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTnomecursoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTnomecursoKeyPressed

    private void jTnomecursoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTnomecursoKeyReleased
        // TODO add your handling code here:
        jTnomecurso.setText(jTnomecurso.getText().toUpperCase());
    }//GEN-LAST:event_jTnomecursoKeyReleased

    private void jBcoordenadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcoordenadorActionPerformed
        // TODO add your handling code here:
        jDcoordenador.setLocationRelativeTo(null);
        ListaCoordenador();
        jDcoordenador.setVisible(true);
    }//GEN-LAST:event_jBcoordenadorActionPerformed

    private void jTbcursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTbcursosMouseClicked
        // TODO add your handling code here:
        ClickCurso();
    }//GEN-LAST:event_jTbcursosMouseClicked

    private void jBretiralinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBretiralinhaActionPerformed
        // TODO add your handling code here:
        if (jThorariocurso.getSelectedRow() > -1) {
            tabelahorario.removeRow(jThorariocurso.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Selecione a Linha Para Exclusão", "Cadastro de Curso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBretiralinhaActionPerformed

    private void jBokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBokActionPerformed
        // TODO add your handling code here:
        if (VerificaHora(jFhinicial.getText(), jFhfinal.getText())) {
            tabelahorario.addRow(new Object[]{jFhinicial.getText(), jFhfinal.getText(), true, true, true, true, true, true, true});
        }
    }//GEN-LAST:event_jBokActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jTbcoordenadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTbcoordenadorMouseClicked
        // TODO add your handling code here:
        Clickcoordenador();
        jDcoordenador.setVisible(false);
    }//GEN-LAST:event_jTbcoordenadorMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBcancelar;
    private javax.swing.JButton jBcoordenador;
    private javax.swing.JButton jBeditar;
    private javax.swing.JButton jBexcluir;
    private javax.swing.JButton jBnovo;
    private javax.swing.JButton jBok;
    private javax.swing.JButton jBretiralinha;
    private javax.swing.JButton jBsalvar;
    private javax.swing.JComboBox jCturno;
    private javax.swing.JDialog jDcoordenador;
    private javax.swing.JFormattedTextField jFhfinal;
    private javax.swing.JFormattedTextField jFhinicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRativo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTbcoordenador;
    private javax.swing.JTable jTbcursos;
    private javax.swing.JTextField jTcoordenador;
    private javax.swing.JTable jThorariocurso;
    private javax.swing.JTextField jTidcurso;
    private javax.swing.JTextField jTnomecurso;
    // End of variables declaration//GEN-END:variables
private void LimpaTela() {
        jTidcurso.setText("");
        jTnomecurso.setText("");
        jTcoordenador.setText("");
        DefaultTableModel tbhorario = (DefaultTableModel) jThorariocurso.getModel();
        tbhorario.setNumRows(0);
        jFhfinal.setText("00:00");
        jFhinicial.setText("00:00");
        jRativo.setSelected(true);
    }

    private void AtivaTela() {
        jTnomecurso.setEnabled(true);
        jBcoordenador.setEnabled(true);
        jCturno.setEnabled(true);
        jThorariocurso.setEnabled(true);
        jFhfinal.setEnabled(true);
        jFhinicial.setEnabled(true);
        jBok.setEnabled(true);
        jBretiralinha.setEnabled(true);
        jRativo.setEnabled(true);
    }

    private void DesativaTela() {
        jTnomecurso.setEnabled(false);
        jBcoordenador.setEnabled(false);
        jCturno.setEnabled(false);
        jThorariocurso.setEnabled(false);
        jFhfinal.setEnabled(false);
        jFhinicial.setEnabled(false);
        jBok.setEnabled(false);
        jBretiralinha.setEnabled(false);
        jRativo.setEnabled(false);
    }

    private void AtivaNovoExcluirEditar() {
        jBnovo.setEnabled(true);
        jBexcluir.setEnabled(true);
        jBeditar.setEnabled(true);
        jBsalvar.setEnabled(false);
        jBcancelar.setEnabled(false);
        jTbcursos.setEnabled(true);        
    }

    private void AtivaSalvarCancelar() {
        jBnovo.setEnabled(false);
        jBexcluir.setEnabled(false);
        jBeditar.setEnabled(false);
        jBsalvar.setEnabled(true);
        jBcancelar.setEnabled(true);
        jTbcursos.setEnabled(false);
    }

    private void ListaCurso() {
        DefaultTableModel tbcurso = (DefaultTableModel) jTbcursos.getModel();
        tbcurso.setNumRows(0);
        try {
            CursoDao cd = new CursoDao();
            listacursos = cd.BuscaCurso(new UnidadeLogadoBeans().getId());
            for (int i = 0; i < listacursos.size(); i++) {
                tbcurso.addRow(new Object[]{listacursos.get(i).getNome(), listacursos.get(i).getNomecoordenador()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Listar" + ex.toString(), "Cadastro Curso", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void CadastraCurso() {
        CursoBeans cb = new CursoBeans();
        cb.setIdprofessor(idprofessor);
        cb.setNome(jTnomecurso.getText());
        cb.setTurno(jCturno.getSelectedIndex());
        cb.setIdunidade(new UnidadeLogadoBeans().getId());
        cb.setAtivo(String.valueOf(jRativo.isSelected()));
        try {
            CursoDao cd = new CursoDao();
            cd.CadastraCurso(cb);
            CadastraHorario(cd.UltimoCursoAdicionado());
            JOptionPane.showMessageDialog(null, "Curso Cadastrado", "Cadastro de Curso", WIDTH);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro" + ex, "Cadastro de Curso", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void AlteraCurso() {
        CursoBeans cb = new CursoBeans();
        cb.setIdprofessor(idprofessor);
        cb.setNome(jTnomecurso.getText());
        cb.setTurno(jCturno.getSelectedIndex());
        cb.setId(Integer.valueOf(jTidcurso.getText()));
        cb.setIdunidade(new UnidadeLogadoBeans().getId());
        cb.setAtivo(String.valueOf(jRativo.isSelected()));
        try {
            CursoDao cd = new CursoDao();
            cd.AlteraCurso(cb);
            AlteraHorario(Integer.valueOf(jTidcurso.getText()));
            JOptionPane.showMessageDialog(null, "Curso Alterado", "Cadastro de Curso", WIDTH);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro" + ex, "Cadastro de Curso", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void ClickCurso() {
        for (int i = 0; i < listacursos.size(); i++) {
            if (i == jTbcursos.getSelectedRow()) {
                jTidcurso.setText(String.valueOf(listacursos.get(i).getId()));
                jTnomecurso.setText(listacursos.get(i).getNome());
                jTcoordenador.setText(listacursos.get(i).getNomecoordenador());
                idprofessor = listacursos.get(i).getIdprofessor();
                jCturno.setSelectedIndex(listacursos.get(i).getTurno());
                jRativo.setSelected(Boolean.valueOf(listacursos.get(i).getAtivo()));
                BuscaHorario(listacursos.get(i).getId());
            }
        }
    }

    private void Excluicurso() {

        try {
            HorarioCursoDao hcd=new HorarioCursoDao();
            hcd.DeletaHorario(Integer.valueOf(jTidcurso.getText()));
            CursoDao cd = new CursoDao();
            cd.Excluicurso(Integer.valueOf(jTidcurso.getText()));
            JOptionPane.showMessageDialog(null, "Curso Excluido", "Cadastro Curso", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro" + ex, "Cadastro de Curso", JOptionPane.ERROR_MESSAGE);
        }
    }

    //inicializa o tamanho dos campos tabela coordenador
    private void InicializaTabelaCoordenador() {
        jTbcoordenador.getColumnModel().getColumn(0).setMinWidth(60);
        jTbcoordenador.getColumnModel().getColumn(0).setMaxWidth(60);
    }

    //lista os professores classificados como coordenador
    private void ListaCoordenador() {
        try {
            DefaultTableModel tabelacoordenador = (DefaultTableModel) jTbcoordenador.getModel();
            tabelacoordenador.setNumRows(0);
            ProfessorDao pd = new ProfessorDao();
            listacoordenador = pd.ListaProfessorAtivo(new UnidadeLogadoBeans().getId());
            for (int i = 0; i < listacoordenador.size(); i++) {
                tabelacoordenador.addRow(new Object[]{listacoordenador.get(i).getId(), listacoordenador.get(i).getNome()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro" + ex, "Coordenadores", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void Clickcoordenador() {
        for (int i = 0; i < listacoordenador.size(); i++) {
            if (i == jTbcoordenador.getSelectedRow()) {
                idprofessor = listacoordenador.get(i).getId();
                jTcoordenador.setText(listacoordenador.get(i).getNome());
            }
        }
    }

    //verifica se as horas inceridas esta em intervalo valido
    private boolean VerificaHora(String hini, String hfin) {
        SimpleDateFormat formatador = new SimpleDateFormat("HH:mm");
        try {
            Date hinicial = formatador.parse(hini);
            Date hfinal = formatador.parse(hfin);
            if ((hinicial.getTime() < hfinal.getTime()) && (Integer.valueOf(hini.substring(0, 2)) <= 23) && (Integer.valueOf(hini.substring(3, 5)) <= 59) && (Integer.valueOf(hfin.substring(0, 2)) <= 23) && (Integer.valueOf(hfin.substring(3, 5)) <= 59)) {
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "Intervalo de Horas Invalido", "Cadastro Curso", JOptionPane.WARNING_MESSAGE);
            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Erro\n" + ex, "Cadastro Curso", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    private void CadastraHorario(int idcurso) {
        HorarioCursoBeans hcb = new HorarioCursoBeans();
        for (int i = 0; i < jThorariocurso.getRowCount(); i++) {
            hcb.setIdcurso(idcurso);
            hcb.setInicio(String.valueOf(jThorariocurso.getValueAt(i, 0)));
            hcb.setTermino(String.valueOf(jThorariocurso.getValueAt(i, 1)));
            hcb.setSegunda(String.valueOf(jThorariocurso.getValueAt(i, 2)));
            hcb.setTerca(String.valueOf(jThorariocurso.getValueAt(i, 3)));
            hcb.setQuarta(String.valueOf(jThorariocurso.getValueAt(i, 4)));
            hcb.setQuinta(String.valueOf(jThorariocurso.getValueAt(i, 5)));
            hcb.setSexta(String.valueOf(jThorariocurso.getValueAt(i, 6)));
            hcb.setSabado(String.valueOf(jThorariocurso.getValueAt(i, 7)));
            hcb.setDomingo(String.valueOf(jThorariocurso.getValueAt(i, 8)));
            try {
                HorarioCursoDao hcd = new HorarioCursoDao();
                hcd.CadastraHorarioCurso(hcb);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro Cadastro Horario\n" + ex, "Cadastro Curso", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void BuscaHorario(int idcurso) {
        try {
            listahorario = new HorarioCursoDao().BuscaHorario(idcurso);
            DefaultTableModel tbhorario = (DefaultTableModel) jThorariocurso.getModel();
            tbhorario.setNumRows(0);
            for (int i = 0; i < listahorario.size(); i++) {
                tbhorario.addRow(new Object[]{listahorario.get(i).getInicio(), listahorario.get(i).getTermino(),
                    Boolean.valueOf(listahorario.get(i).getSegunda()), Boolean.valueOf(listahorario.get(i).getTerca()), Boolean.valueOf(listahorario.get(i).getQuarta()),
                    Boolean.valueOf(listahorario.get(i).getQuinta()), Boolean.valueOf(listahorario.get(i).getSexta()), Boolean.valueOf(listahorario.get(i).getSabado()),
                    Boolean.valueOf(listahorario.get(i).getDomingo())});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro Lista Horario\n" + ex, "Cadastro de Cursos", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void AlteraHorario(Integer idcurso) {
        try {
            HorarioCursoDao hcd = new HorarioCursoDao();
            hcd.DeletaHorario(idcurso);
            CadastraHorario(idcurso);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro Altera Horario\n" + ex, "Cadastro de Cursos", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void OcultaCampos() {
        jTidcurso.setVisible(false);
    }

}
